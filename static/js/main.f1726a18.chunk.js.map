{"version":3,"sources":["Modal.jsx","Summary.jsx","TodoCreator.jsx","List/List.jsx","App.js","reportWebVitals.js","index.js"],"names":["Modal","props","currentTodo","setCurrentTodo","prompt","content","isEditable","cancelAction","confirmAction","confirmText","className","type","onChange","event","title","target","value","id","_id","name","onClick","greeting","time","Date","getHours","Summary","listLength","TodoCreator","handleAdd","newTodoTitle","setNewTodoTitle","htmlFor","placeholder","trim","disabled","List","todos","handleEdit","handleDelete","useState","isEditing","setIsEditing","isDeleting","setisDeleting","isDeletingAllComplete","setIsDeletingAllComplete","filter","todo","completed","length","map","checked","require","config","URI","process","App","useEffect","fetch","then","res","json","setIsLoaded","setTodos","catch","error","console","log","setError","isLoaded","method","headers","body","JSON","stringify","userId","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1726a18.chunk.js","sourcesContent":["import \"./Modal.css\";\r\n\r\nconst Modal = (props) => {\r\n  const {\r\n    currentTodo,\r\n    setCurrentTodo,\r\n    prompt,\r\n    content,\r\n    isEditable,\r\n    cancelAction,\r\n    confirmAction,\r\n    confirmText,\r\n  } = props;\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"modal-content\">\r\n        <div className=\"modal-prompt\">{prompt}</div>\r\n\r\n        {!isEditable && <div className=\"modal-text\">{content}</div>}\r\n        {isEditable && (\r\n          <input\r\n            className=\"edit-task\"\r\n            type=\"text\"\r\n            onChange={(event) => {\r\n              setCurrentTodo({ ...currentTodo, title: event.target.value });\r\n            }}\r\n            id={currentTodo._id}\r\n            name={currentTodo.title}\r\n            value={content}\r\n          />\r\n        )}\r\n        <div className=\"button-wrapper\">\r\n          <button onClick={cancelAction}>Cancel</button>\r\n          <button className=\"negative\" onClick={confirmAction}>\r\n            {confirmText}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import \"./Summary.css\";\r\n\r\nconst greeting = () => {\r\n  let time = new Date().getHours();\r\n\r\n  if (time < 12) {\r\n    return \"Good morning!\";\r\n  } else if (time >= 12 && time < 17) {\r\n    return \"Good afternoon!\";\r\n  } else return \"Good evening!\";\r\n};\r\n\r\nconst Summary = (props) => {\r\n  const { listLength } = props;\r\n  return (\r\n    <>\r\n      {listLength === 0 ? (\r\n        <div className=\"summary\">\r\n          <div className=\"summary-greeting\">Congratulations!</div>\r\n          You are done with your list.\r\n        </div>\r\n      ) : (\r\n        <div className=\"summary\">\r\n          <div className=\"summary-greeting\">{greeting()}</div>\r\n          <div className=\"summary-item-details\">\r\n            You have {listLength} {listLength > 1 ? \"items\" : \"item\"} left on\r\n            your list.\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Summary;\r\n","const TodoCreator = (props) => {\r\n  const { handleAdd, newTodoTitle, setNewTodoTitle } = props;\r\n  return (\r\n    <div className=\"new-task-wrapper\">\r\n      <label htmlFor=\"new-todo\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"todo\"\r\n          placeholder=\"Describe your task\"\r\n          id=\"new-todo\"\r\n          value={newTodoTitle}\r\n          onChange={(event) => setNewTodoTitle(event.target.value)}\r\n        />\r\n      </label>\r\n      <button\r\n        className=\"positive\"\r\n        onClick={() => {\r\n          if (newTodoTitle !== \"\") {\r\n            handleAdd({ title: newTodoTitle.trim() });\r\n            setNewTodoTitle(\"\");\r\n          }\r\n        }}\r\n        disabled={newTodoTitle === \"\"}\r\n      >\r\n        Add\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoCreator;\r\n","import { useState } from \"react\";\r\nimport Modal from \"../Modal\";\r\nimport Summary from \"../Summary\";\r\nimport TodoCreator from \"../TodoCreator\";\r\nimport \"./List.css\";\r\n\r\nconst List = (props) => {\r\n  const { todos, handleEdit, handleAdd, handleDelete } = props;\r\n  const [newTodoTitle, setNewTodoTitle] = useState(\"\");\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [isDeleting, setisDeleting] = useState(false);\r\n  const [isDeletingAllComplete, setIsDeletingAllComplete] = useState(false);\r\n  const [currentTodo, setCurrentTodo] = useState({});\r\n\r\n  return (\r\n    <>\r\n      {isEditing && (\r\n        <Modal\r\n          currentTodo={currentTodo}\r\n          setCurrentTodo={setCurrentTodo}\r\n          isEditable={true}\r\n          prompt={\"Edit task\"}\r\n          content={currentTodo.title}\r\n          cancelAction={() => {\r\n            setIsEditing(false);\r\n            setCurrentTodo({});\r\n          }}\r\n          confirmAction={() => {\r\n            handleEdit({\r\n              ...currentTodo,\r\n              title: currentTodo.title.trim(),\r\n            });\r\n            setIsEditing(false);\r\n            setCurrentTodo({});\r\n          }}\r\n          confirmText={\"Save\"}\r\n        />\r\n      )}\r\n\r\n      {isDeleting && (\r\n        <Modal\r\n          prompt={`Delete \"${currentTodo.title}\" task?`}\r\n          content={\"This cannot be undone.\"}\r\n          cancelAction={() => {\r\n            setisDeleting(false);\r\n            setCurrentTodo({});\r\n          }}\r\n          confirmAction={() => {\r\n            setisDeleting(false);\r\n            handleDelete(currentTodo._id);\r\n            setCurrentTodo({});\r\n          }}\r\n          confirmText={\"Delete\"}\r\n        />\r\n      )}\r\n\r\n      {isDeletingAllComplete && (\r\n        <Modal\r\n          prompt={`Delete ${\r\n            todos.filter((todo) => todo.completed).length\r\n          } completed ${\r\n            todos.filter((todo) => todo.completed).length === 1\r\n              ? \"task\"\r\n              : \"tasks\"\r\n          }?`}\r\n          content={\"This cannot be undone.\"}\r\n          cancelAction={() => {\r\n            setIsDeletingAllComplete(false);\r\n          }}\r\n          confirmAction={() => {\r\n            setIsDeletingAllComplete(false);\r\n          }}\r\n          confirmText={`Delete ${\r\n            todos.filter((todo) => todo.completed).length === 1\r\n              ? \"task\"\r\n              : \"tasks\"\r\n          }`}\r\n        />\r\n      )}\r\n\r\n      <Summary listLength={todos.filter((todo) => !todo.completed).length} />\r\n\r\n      <TodoCreator\r\n        handleAdd={handleAdd}\r\n        newTodoTitle={newTodoTitle}\r\n        setNewTodoTitle={setNewTodoTitle}\r\n      />\r\n\r\n      {/* Incompleted tasks */}\r\n      <div className=\"uncompleted-todos\">\r\n        {todos\r\n          .filter((todo) => !todo.completed)\r\n          .map((todo) => (\r\n            <div key={todo._id} className=\"todo-wrapper\">\r\n              <label\r\n                htmlFor={todo.title}\r\n                className={todo.completed ? \"completed-task\" : \"\"}\r\n              >\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={todo.completed}\r\n                  onChange={() => {\r\n                    handleEdit({ ...todo, completed: !todo.completed });\r\n                    if (isEditing) {\r\n                      setIsEditing(false);\r\n                    }\r\n                  }}\r\n                  id={todo.title}\r\n                  name={todo.title}\r\n                  value={todo.title}\r\n                />\r\n                <span className=\"checkmark\">{todo.completed}</span>\r\n                <span className=\"title\">{todo.title}</span>\r\n              </label>\r\n\r\n              <div className=\"editing-wrapper\">\r\n                <button\r\n                  title=\"Edit task\"\r\n                  disabled={todo.completed}\r\n                  onClick={() => {\r\n                    setCurrentTodo(todo);\r\n                    setIsEditing(true);\r\n                  }}\r\n                >\r\n                  Edit\r\n                </button>\r\n\r\n                <button\r\n                  title=\"Delete task\"\r\n                  className={\"positive delete-button\"}\r\n                  onClick={() => {\r\n                    setCurrentTodo(todo);\r\n                    setisDeleting(currentTodo);\r\n                  }}\r\n                >\r\n                  X\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n\r\n      {/* Completed tasks */}\r\n      <div className=\"completed-todos\">\r\n        {todos\r\n          .filter((todo) => todo.completed)\r\n          .map((todo) => (\r\n            <div key={todo._id} className=\"todo-wrapper\">\r\n              <label\r\n                htmlFor={todo.title}\r\n                className={todo.completed ? \"completed-task\" : \"\"}\r\n              >\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={todo.completed}\r\n                  onChange={() => {\r\n                    handleEdit({ ...todo, completed: !todo.completed });\r\n                    if (isEditing) {\r\n                      setIsEditing(false);\r\n                    }\r\n                  }}\r\n                  id={todo.title}\r\n                  name={todo.title}\r\n                  value={todo.title}\r\n                />\r\n                <span className=\"checkmark\">{todo.completed}</span>\r\n                {!(isEditing && currentTodo._id === todo._id) && (\r\n                  <span className=\"title\">{todo.title}</span>\r\n                )}\r\n              </label>\r\n              <button\r\n                title=\"Delete task\"\r\n                className={\"positive delete-button\"}\r\n                onClick={() => {\r\n                  setCurrentTodo(todo);\r\n                  setisDeleting(currentTodo);\r\n                }}\r\n              >\r\n                X\r\n              </button>\r\n            </div>\r\n          ))}\r\n      </div>\r\n\r\n      <div className=\"delete-all-wrapper\">\r\n        <button\r\n          className={\"negative delete-all-button\"}\r\n          title=\"Delete all completed tasks\"\r\n          onClick={() => {\r\n            setIsDeletingAllComplete(true);\r\n          }}\r\n        >\r\n          Delete all completed tasks\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nimport \"./App.css\";\r\nimport List from \"./List/List.jsx\";\r\n\r\nconst dotenv = require(\"dotenv\");\r\ndotenv.config();\r\n\r\nconst URI = process.env.REACT_APP_URI;\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    fetch(URI)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (mounted) {\r\n          setIsLoaded(true);\r\n          setTodos(res);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error: \", error);\r\n        setError(\"There was a problem retrieving your to-do list.\");\r\n      });\r\n  }, []);\r\n\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  function handleEdit(currentTodo) {\r\n    fetch(URI, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(currentTodo),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => setTodos(res));\r\n  }\r\n\r\n  function handleAdd(todo) {\r\n    fetch(URI, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        userId: todo.userId,\r\n        title: todo.title,\r\n        completed: todo.completed,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => setTodos(res));\r\n  }\r\n\r\n  function handleDelete(id) {\r\n    fetch(URI, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ id: id }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => setTodos(res));\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {!isLoaded && !error && (\r\n        <div className=\"loading\">\r\n          <div>Loading</div>\r\n          <div className=\"loading-dots\"></div>\r\n        </div>\r\n      )}\r\n\r\n      {isLoaded && !error && todos !== [] && (\r\n        <List\r\n          todos={todos}\r\n          handleEdit={handleEdit}\r\n          handleAdd={handleAdd}\r\n          handleDelete={handleDelete}\r\n        />\r\n      )}\r\n\r\n      {error && error}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}