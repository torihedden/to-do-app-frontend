{"version":3,"sources":["Login/Login.jsx","Modal/Modal.jsx","Summary/Summary.jsx","TodoCreator/TodoCreator.jsx","List/List.jsx","Loading/Loading.jsx","Logout/Logout.jsx","ErrorMessage/ErrorMessage.jsx","HomePage/HomePage.jsx","NotFound/NotFound.jsx","App.js","reportWebVitals.js","index.js"],"names":["Login","loginWithRedirect","useAuth0","onClick","Modal","props","currentTodo","setCurrentTodo","prompt","content","isEditable","cancelAction","confirmAction","confirmText","className","type","onChange","event","title","target","value","id","_id","name","autoFocus","greeting","time","Date","getHours","Summary","completeListLength","incompleteListLength","TodoCreator","handleAdd","newTodoTitle","setNewTodoTitle","htmlFor","placeholder","trim","disabled","List","todos","handleEdit","handleDelete","handleDeleteCompletedTodos","useState","isEditing","setIsEditing","isDeleting","setisDeleting","isDeletingAllCompleted","setIsDeletingAllCompleted","incompleteTodos","filter","todo","completed","completeTodos","length","map","checked","Loading","Logout","logout","hrefWithoutTrailingSlash","window","location","href","replace","returnTo","ErrorMessage","error","require","config","URI","process","sortByPriority","a","b","priority","withAuthenticationRequired","useEffect","fetch","then","res","json","setIsLoaded","setTodos","sort","console","log","catch","setError","isLoaded","method","headers","body","JSON","stringify","NotFound","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","domain","clientId","redirectUri","origin","document","getElementById"],"mappings":"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","file":"static/js/main.1a211b7d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst Login = () => {\r\n  const { loginWithRedirect } = useAuth0();\r\n\r\n  return <button onClick={() => loginWithRedirect()}>Log In</button>;\r\n};\r\n\r\nexport default Login;\r\n","import \"./Modal.css\";\r\n\r\nconst Modal = (props) => {\r\n  const {\r\n    currentTodo,\r\n    setCurrentTodo,\r\n    prompt,\r\n    content,\r\n    isEditable,\r\n    cancelAction,\r\n    confirmAction,\r\n    confirmText,\r\n  } = props;\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"modal-content\">\r\n        <div className=\"modal-prompt\">{prompt}</div>\r\n\r\n        {/* for deletion modal */}\r\n        {!isEditable && <div className=\"modal-text\">{content}</div>}\r\n\r\n        <form>\r\n          {/* for editing modal */}\r\n          {isEditable && (\r\n            <input\r\n              className=\"edit-task\"\r\n              type=\"text\"\r\n              onChange={(event) => {\r\n                setCurrentTodo({ ...currentTodo, title: event.target.value });\r\n              }}\r\n              id={currentTodo._id}\r\n              name={currentTodo.title}\r\n              value={content}\r\n              autoFocus={isEditable ? true : false}\r\n            />\r\n          )}\r\n\r\n          <div className=\"button-wrapper\">\r\n            <button\r\n              onClick={cancelAction}\r\n              autoFocus={!isEditable ? true : false}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button className=\"negative\" onClick={confirmAction}>\r\n              {confirmText}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import \"./Summary.css\";\r\n\r\nconst greeting = () => {\r\n  let time = new Date().getHours();\r\n\r\n  if (time < 12) {\r\n    return \"Good morning!\";\r\n  } else if (time >= 12 && time < 17) {\r\n    return \"Good afternoon!\";\r\n  } else return \"Good evening!\";\r\n};\r\n\r\nconst Summary = (props) => {\r\n  const { completeListLength, incompleteListLength } = props;\r\n  return (\r\n    <>\r\n      {completeListLength !== 0 && incompleteListLength === 0 ? (\r\n        <div className=\"summary\">\r\n          <div className=\"summary-greeting\">Congratulations!</div>\r\n          You are done with your list.\r\n        </div>\r\n      ) : (\r\n        <div className=\"summary\">\r\n          <div className=\"summary-greeting\">{greeting()}</div>\r\n          <div className=\"summary-item-details\">\r\n            {completeListLength === 0 &&\r\n              incompleteListLength === 0 &&\r\n              \"You haven't added any tasks yet.\"}\r\n\r\n            {incompleteListLength >= 1 &&\r\n              `You have ${incompleteListLength} ${\r\n                incompleteListLength > 1 ? \"items\" : \"item\"\r\n              } left on your list.`}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Summary;\r\n","import \"./TodoCreator.css\";\r\n\r\nconst TodoCreator = (props) => {\r\n  const { handleAdd, newTodoTitle, setNewTodoTitle } = props;\r\n\r\n  return (\r\n    <form className=\"new-task-wrapper\">\r\n      <label htmlFor=\"new-todo\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"todo\"\r\n          placeholder=\"Describe your task\"\r\n          id=\"new-todo\"\r\n          value={newTodoTitle}\r\n          onChange={(event) => setNewTodoTitle(event.target.value)}\r\n        />\r\n      </label>\r\n      <button\r\n        className=\"positive add-todo\"\r\n        type=\"submit\"\r\n        onClick={() => {\r\n          if (newTodoTitle !== \"\") {\r\n            handleAdd({ title: newTodoTitle.trim() });\r\n            setNewTodoTitle(\"\");\r\n          }\r\n        }}\r\n        disabled={newTodoTitle === \"\"}\r\n      >\r\n        Add\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TodoCreator;\r\n","import { useState } from \"react\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport Summary from \"../Summary/Summary\";\r\nimport TodoCreator from \"../TodoCreator/TodoCreator\";\r\nimport \"./List.css\";\r\n\r\nconst List = (props) => {\r\n  const {\r\n    todos,\r\n    handleEdit,\r\n    handleAdd,\r\n    handleDelete,\r\n    handleDeleteCompletedTodos,\r\n  } = props;\r\n  const [newTodoTitle, setNewTodoTitle] = useState(\"\");\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [isDeleting, setisDeleting] = useState(false);\r\n  const [isDeletingAllCompleted, setIsDeletingAllCompleted] = useState(false);\r\n  const [currentTodo, setCurrentTodo] = useState({});\r\n\r\n  const incompleteTodos = todos.filter((todo) => !todo.completed);\r\n  const completeTodos = todos.filter((todo) => todo.completed);\r\n\r\n  return (\r\n    <>\r\n      {isEditing && (\r\n        <Modal\r\n          currentTodo={currentTodo}\r\n          setCurrentTodo={setCurrentTodo}\r\n          isEditable={true}\r\n          prompt={\"Edit task\"}\r\n          content={currentTodo.title}\r\n          cancelAction={() => {\r\n            setIsEditing(false);\r\n            setCurrentTodo({});\r\n          }}\r\n          confirmAction={() => {\r\n            handleEdit({\r\n              ...currentTodo,\r\n              title: currentTodo.title.trim(),\r\n            });\r\n            setIsEditing(false);\r\n            setCurrentTodo({});\r\n          }}\r\n          confirmText={\"Save\"}\r\n        />\r\n      )}\r\n\r\n      {isDeleting && (\r\n        <Modal\r\n          prompt={`Delete \"${currentTodo.title}\" task?`}\r\n          content={\"This cannot be undone.\"}\r\n          cancelAction={() => {\r\n            setisDeleting(false);\r\n            setCurrentTodo({});\r\n          }}\r\n          confirmAction={() => {\r\n            setisDeleting(false);\r\n            handleDelete(currentTodo._id);\r\n            setCurrentTodo({});\r\n          }}\r\n          confirmText={\"Delete\"}\r\n        />\r\n      )}\r\n\r\n      {isDeletingAllCompleted && (\r\n        <Modal\r\n          prompt={`Delete ${completeTodos.length} completed ${\r\n            completeTodos.length === 1 ? \"task\" : \"tasks\"\r\n          }?`}\r\n          content={\"This cannot be undone.\"}\r\n          cancelAction={() => {\r\n            setIsDeletingAllCompleted(false);\r\n          }}\r\n          confirmAction={() => {\r\n            handleDeleteCompletedTodos();\r\n            setIsDeletingAllCompleted(false);\r\n          }}\r\n          confirmText={`Delete ${\r\n            completeTodos.length === 1 ? \"task\" : \"tasks\"\r\n          }`}\r\n        />\r\n      )}\r\n\r\n      <Summary\r\n        completeListLength={completeTodos.length}\r\n        incompleteListLength={incompleteTodos.length}\r\n      />\r\n\r\n      <TodoCreator\r\n        handleAdd={handleAdd}\r\n        newTodoTitle={newTodoTitle}\r\n        setNewTodoTitle={setNewTodoTitle}\r\n      />\r\n\r\n      {/* Incompleted tasks */}\r\n      <div className=\"uncompleted-todos\">\r\n        {incompleteTodos.map((todo) => (\r\n          <div key={todo._id} className=\"todo-wrapper\">\r\n            <label\r\n              htmlFor={todo.title}\r\n              className={todo.completed ? \"completed-task\" : \"\"}\r\n            >\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={todo.completed}\r\n                onChange={() => {\r\n                  handleEdit({ ...todo, completed: !todo.completed });\r\n                  if (isEditing) {\r\n                    setIsEditing(false);\r\n                  }\r\n                }}\r\n                id={todo.title}\r\n                name={todo.title}\r\n                value={todo.title}\r\n              />\r\n              <span className=\"checkmark\">{todo.completed}</span>\r\n              <span className=\"title\">{todo.title}</span>\r\n            </label>\r\n\r\n            <div className=\"editing-wrapper\">\r\n              <button\r\n                title=\"Edit task\"\r\n                disabled={todo.completed}\r\n                onClick={() => {\r\n                  setCurrentTodo(todo);\r\n                  setIsEditing(true);\r\n                }}\r\n              >\r\n                Edit\r\n              </button>\r\n\r\n              <button\r\n                title=\"Delete task\"\r\n                className={\"positive delete-button\"}\r\n                onClick={() => {\r\n                  setCurrentTodo(todo);\r\n                  setisDeleting(currentTodo);\r\n                }}\r\n              >\r\n                X\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Completed tasks */}\r\n      <div className=\"completed-todos\">\r\n        {completeTodos.map((todo) => (\r\n          <div key={todo._id} className=\"todo-wrapper\">\r\n            <label\r\n              htmlFor={todo.title}\r\n              className={todo.completed ? \"completed-task\" : \"\"}\r\n            >\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={todo.completed}\r\n                onChange={() => {\r\n                  handleEdit({ ...todo, completed: !todo.completed });\r\n                  if (isEditing) {\r\n                    setIsEditing(false);\r\n                  }\r\n                }}\r\n                id={todo.title}\r\n                name={todo.title}\r\n                value={todo.title}\r\n              />\r\n              <span className=\"checkmark\">{todo.completed}</span>\r\n              {!(isEditing && currentTodo._id === todo._id) && (\r\n                <span className=\"title\">{todo.title}</span>\r\n              )}\r\n            </label>\r\n            <button\r\n              title=\"Delete task\"\r\n              className={\"positive delete-button\"}\r\n              onClick={() => {\r\n                setCurrentTodo(todo);\r\n                setisDeleting(currentTodo);\r\n              }}\r\n            >\r\n              X\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"delete-all-wrapper\">\r\n        <button\r\n          className={\"negative delete-all-button\"}\r\n          title=\"Delete all completed tasks\"\r\n          disabled={completeTodos.length < 1}\r\n          onClick={() => {\r\n            setIsDeletingAllCompleted(true);\r\n          }}\r\n        >\r\n          Delete all completed tasks\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import \"./Loading.css\";\r\n\r\nconst Loading = (props) => {\r\n  return (\r\n    <div className=\"loading\">\r\n      <div>Loading</div>\r\n      <div className=\"loading-dots\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport \"./Logout.css\";\r\n\r\nconst Logout = () => {\r\n  const { logout } = useAuth0();\r\n\r\n  const hrefWithoutTrailingSlash = window.location.href.replace(/\\/+$/, \"\");\r\n\r\n  return (\r\n    <div className=\"logout-wrapper\">\r\n      <button\r\n        onClick={() =>\r\n          logout({\r\n            returnTo: `${hrefWithoutTrailingSlash}/login`,\r\n          })\r\n        }\r\n      >\r\n        Log Out\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logout;\r\n","import \"./ErrorMessage.css\";\r\n\r\nconst ErrorMessage = ({ error }) => {\r\n  return <div className=\"error-message\">{error}</div>;\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useEffect, useState, React } from \"react\";\r\nimport List from \"../List/List\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport Logout from \"../Logout/Logout\";\r\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\r\nimport { withAuthenticationRequired } from \"@auth0/auth0-react\";\r\n\r\nconst dotenv = require(\"dotenv\");\r\ndotenv.config();\r\n\r\nconst URI = process.env.REACT_APP_URI;\r\n\r\nfunction sortByPriority(a, b) {\r\n  if (a.priority < b.priority) {\r\n    return -1;\r\n  }\r\n\r\n  if (a.priority > b.priority) {\r\n    return 1;\r\n  }\r\n\r\n  return 0;\r\n}\r\n\r\nconst HomePage = () => {\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    fetch(`${URI}/todos`)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (mounted) {\r\n          setIsLoaded(true);\r\n          setTodos(res.sort(sortByPriority));\r\n          console.log(res);\r\n        }\r\n      })\r\n      // TODO: add error messaging to other request types\r\n      .catch((error) => {\r\n        console.log(\"Error: \", error);\r\n        setError(\"There was a problem retrieving your list.\");\r\n      });\r\n  }, []);\r\n\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  function handleEdit(currentTodo) {\r\n    fetch(`${URI}/todos`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(currentTodo),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => setTodos(res));\r\n  }\r\n\r\n  function handleAdd(todo) {\r\n    fetch(`${URI}/todos`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        title: todo.title,\r\n        completed: todo.completed,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => setTodos(res));\r\n  }\r\n\r\n  function handleDelete(id) {\r\n    fetch(`${URI}/todos/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => setTodos(res));\r\n  }\r\n\r\n  function handleDeleteCompletedTodos() {\r\n    fetch(`${URI}/todos/completed`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => setTodos(res));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!isLoaded && !error && <Loading />}\r\n\r\n      {isLoaded && !error && todos !== [] && (\r\n        <List\r\n          todos={todos}\r\n          handleEdit={handleEdit}\r\n          handleAdd={handleAdd}\r\n          handleDelete={handleDelete}\r\n          handleDeleteCompletedTodos={handleDeleteCompletedTodos}\r\n        />\r\n      )}\r\n      <ErrorMessage error={error} />\r\n      <Logout />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withAuthenticationRequired(HomePage);\r\n","import React from \"react\";\r\nimport \"./NotFound.css\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1>404: Page not found.</h1>\r\n      <div>Looks like that page doesn't exist.</div>\r\n      <div>\r\n        Try <a href=\"/to-do-app-frontend\">going home</a> instead.\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\n\r\nimport \"./App.css\";\r\nimport Login from \"./Login/Login\";\r\nimport HomePage from \"./HomePage/HomePage\";\r\nimport NotFound from \"./NotFound/NotFound\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Router>\r\n        <Routes>\r\n          <Route path=\"/to-do-app-frontend/\" element={<HomePage />} />\r\n          <Route path=\"/to-do-app-frontend/login\" element={<Login />} />\r\n          <Route path=\"*\" element={<NotFound />} />\r\n        </Routes>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Auth0Provider } from \"@auth0/auth0-react\";\r\n\r\nReactDOM.render(\r\n  <Auth0Provider\r\n    domain=\"dev-cfelw9db.us.auth0.com\"\r\n    clientId=\"DVg2JXKdD0cr9JZ9dTwRkRwXJ11ki9Z3\"\r\n    redirectUri={`${window.location.origin}/to-do-app-frontend`}\r\n  >\r\n    <App />\r\n  </Auth0Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}